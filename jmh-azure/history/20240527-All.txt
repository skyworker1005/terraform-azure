

현재 내가 만들고 있는 terraform code 이다.   
azure databricks workspace 을 만들고 바로 token 과 cluster을 만드는 terraform code 을 업데이트 해줘 
기존 코드에서는 databricks_token을 이용해서 이 값을 이용하는 것으로 되어 있는데, 이 부분을 전부 무시하고 만들어줘 

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/providers.tf
```
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~>3.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "~>3.0"
    }
    databricks = {
      source = "databricks/databricks"
    }
    azuread = {
      source  = "hashicorp/azuread"
      version = "~> 1.0"
    }
  }
}

provider "azurerm" {
  features {
    resource_group {
      prevent_deletion_if_contains_resources = false
    }
  }

  subscription_id   = "5f918871-6ae3-44a3-80dc-ba82deaf3190"
  tenant_id         = "1fd5ae1e-3b59-4db5-a2c5-5764441925b9"
  client_id         = "61c8285a-8bc7-4d60-a13d-f21e12d4b627"
  client_secret     = "qjJ8Q~tHgsWx39O2ClSSsHMgOIgCG3FUp32cdcEY"
}



# remote state
resource "random_string" "resource_code" {
  length  = 5
  special = false
  upper   = false
}

resource "azurerm_resource_group" "tfstate" {
  name     = "tfstate"
  location = "Korea Central"
}

resource "azurerm_storage_account" "tfstate" {
  name                     = "tfstatesakdp"
  resource_group_name      = azurerm_resource_group.tfstate.name
  location                 = azurerm_resource_group.tfstate.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
  allow_nested_items_to_be_public = false

  tags = {
    environment         = var.environment
  }
}

resource "azurerm_storage_container" "tfstate" {
  name                  = "tfstate"
  storage_account_name  = azurerm_storage_account.tfstate.name
  container_access_type = "private"
}
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/variables.tf
```
variable "prefix" {
  type        = string
  default     = "KDP"
  description = "A prefix used to generate the names of the resources."
}

variable "location" {
  type        = string
  default     = "koreacentral"
  description = "The Azure region where the resources will be created."
}

variable "environment" {
  description = "Environment is development or production environment information."
  default     = "DEV"
}

variable "vnet_name" {
  description = "The name of the virtual network."
  type        = string
  default     = "VNET"
}

variable "vnet_cidr" {
  description = "CIDR block for the virtual network."
  type        = string
  default     = "10.0.0.0/16"
}

variable "public_subnet_name" {
  description = "The name of the public subnet."
  type        = string
  default     = "PUBLIC"
}

variable "public_subnet_cidr" {
  description = "CIDR block for the public subnet."
  type        = string
  default     = "10.0.1.0/24"
}

variable "private_subnet_name" {
  description = "The name of the private subnet."
  type        = string
  default     = "PRIVATE"
}

variable "private_subnet_cidr" {
  description = "CIDR block for the private subnet."
  type        = string
  default     = "10.0.2.0/24"
}

variable "private_endpoint_subnet_name" {
  description = "The name of the private endpoint subnet."
  type        = string
  default     = "PRIVATE_ENDPOINT"
}

variable "private_endpoint_subnet_cidr" {
  description = "CIDR block for the private endpoint subnet."
  type        = string
  default     = "10.0.3.0/24"
}

variable "adls_subnet_name" {
  description = "The name of the ADLS subnet."
  type        = string
  default     = "ADLS"
}

variable "adls_subnet_cidr" {
  description = "CIDR block for the ADLS subnet."
  type        = string
  default     = "10.0.4.0/24"
}

variable "databricks_principal_id" {
  description = "databricks_principal_id"
  type        = string
  default     = "48e1c7f2-9858-407d-983c-11dea10e78f4"
}

variable "databricks_token" {
  description = "Databricks token for authentication"
  type        = string
}
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/terraform.tfvars
```
prefix                       = "KDP"
location                     = "koreacentral"
environment                  = "DEV"
vnet_name                    = "VNET"
vnet_cidr                    = "10.0.0.0/16"
public_subnet_name           = "PUBLIC"
public_subnet_cidr           = "10.0.1.0/24"
private_subnet_name          = "PRIVATE"
private_subnet_cidr          = "10.0.2.0/24"
private_endpoint_subnet_name = "PRIVATE_ENDPOINT"
private_endpoint_subnet_cidr = "10.0.3.0/24"
adls_subnet_name             = "ADLS"
adls_subnet_cidr             = "10.0.4.0/24"
databricks_principal_id      = "48e1c7f2-9858-407d-983c-11dea10e78f4"
databricks_token             = "dapi05c541ea84703d273ed3f0d5abb584c7"
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/network/main.tf not found
```
File not found.
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/network/variables.tf not found
```
File not found.
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/network/nsg.tf
```
# NSG for Public Subnet
resource "azurerm_network_security_group" "nsg1" {
  name                = "${var.prefix}-nsg1"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
}

# Associate NSG to Public Subnet
resource "azurerm_subnet_network_security_group_association" "nsg_association_public_subnet" {
  subnet_id                 = azurerm_subnet.public_subnet.id
  network_security_group_id = azurerm_network_security_group.nsg1.id
}

# NSG for Private Subnet
resource "azurerm_network_security_group" "nsg2" {
  name                = "${var.prefix}-nsg2"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
}

# Associate NSG to Private Subnet
resource "azurerm_subnet_network_security_group_association" "nsg_association_private_subnet" {
  subnet_id                 = azurerm_subnet.private_subnet.id
  network_security_group_id = azurerm_network_security_group.nsg2.id
}

resource "azurerm_network_security_rule" "subnet2_allow_http_from_subnet1" {
  name                        = "${var.prefix}-allow-http-from-public"
  priority                    = 200
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = "80"
  source_address_prefix       = azurerm_subnet.public_subnet.address_prefixes[0]
  destination_address_prefix  = azurerm_subnet.private_subnet.address_prefixes[0]
  network_security_group_name = azurerm_network_security_group.nsg2.name
  resource_group_name         = azurerm_network_security_group.nsg2.resource_group_name
}

resource "azurerm_network_security_rule" "subnet2_allow_https_from_subnet1" {
  name                        = "${var.prefix}-allow-https-from-public"
  priority                    = 210
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = "443"
  source_address_prefix       = azurerm_subnet.public_subnet.address_prefixes[0]
  destination_address_prefix  = azurerm_subnet.private_subnet.address_prefixes[0]
  network_security_group_name = azurerm_network_security_group.nsg2.name
  resource_group_name         = azurerm_network_security_group.nsg2.resource_group_name
}

resource "azurerm_network_security_rule" "subnet2_allow_all_to_subnet1" {
  name                        = "${var.prefix}-allow-all-to-public"
  priority                    = 220
  direction                   = "Outbound"
  access                      = "Allow"
  protocol                    = "*"
  source_port_range           = "*"
  destination_port_range      = "*"
  source_address_prefix       = azurerm_subnet.private_subnet.address_prefixes[0]
  destination_address_prefix  = azurerm_subnet.public_subnet.address_prefixes[0]
  network_security_group_name = azurerm_network_security_group.nsg2.name
  resource_group_name         = azurerm_network_security_group.nsg2.resource_group_name
}
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/network/outputs.tf
```
output "vnet_id" {
  value = azurerm_virtual_network.vnet.id
}

output "public_subnet_id" {
  value = azurerm_subnet.public_subnet.id
}

output "private_subnet_id" {
  value = azurerm_subnet.private_subnet.id
}

output "private_endpoint_subnet_id" {
  value = azurerm_subnet.private_endpoint_subnet.id
}

output "adls_subnet_id" {
  value = azurerm_subnet.adls_subnet.id
}

output "nsg_association_public_subnet" {
  value = azurerm_subnet_network_security_group_association.nsg_association_public_subnet.id
}

output "nsg_association_private_subnet" {
  value = azurerm_subnet_network_security_group_association.nsg_association_private_subnet.id
}

output "public_subnet_name" {
  value = azurerm_subnet.public_subnet.name
}

output "private_subnet_name" {
  value = azurerm_subnet.private_subnet.name
}

output "private_endpoint_subnet_name" {
  value = azurerm_subnet.private_endpoint_subnet.name
}

output "adls_subnet_name" {
  value = azurerm_subnet.adls_subnet.name
}```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/databricks/databricks.tf
```

resource "azurerm_resource_group" "rg" {
  name     = "${var.prefix}-${var.environment}-${var.rg_name}"
  location = var.location
}

resource "azurerm_databricks_workspace" "dbworkspace" {
  name                = "${var.prefix}-${var.environment}"
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location
  sku                 = var.sku
  tags = {
    Environment = var.environment
  }
  custom_parameters {
    no_public_ip                                         = true
    public_subnet_network_security_group_association_id  = var.nsg_association1
    private_subnet_network_security_group_association_id = var.nsg_association2
    virtual_network_id                                   = var.vnet_id
    public_subnet_name                                   = var.public_subnet_name
    private_subnet_name                                  = var.private_subnet_name
  }
  depends_on = [
    var.nsg_association1, 
    var.nsg_association2
  ]
}



resource "azurerm_private_endpoint" "databricks_control_plane" {
  name                = "${var.prefix}-control-plane-pe"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  subnet_id           = var.private_endpoint_subnet_id
  private_service_connection {
    name                           = "${var.prefix}-control-plane-psc"
    private_connection_resource_id = azurerm_databricks_workspace.dbworkspace.id
    subresource_names              = ["databricks_ui_api"]
    is_manual_connection           = false
  }
}

resource "azurerm_private_dns_zone" "databricks_zone" {
  name                = "privatelink.databricks.azure.com"
  resource_group_name = azurerm_resource_group.rg.name
}

resource "azurerm_private_dns_zone_virtual_network_link" "databricks_dns_link" {
  name                  = "${var.prefix}-dns-vnet-link"
  resource_group_name   = azurerm_resource_group.rg.name
  private_dns_zone_name = azurerm_private_dns_zone.databricks_zone.name
  virtual_network_id    = var.vnet_id
}

resource "azurerm_private_dns_a_record" "databricks_a_record" {
  name                = "adb-${azurerm_databricks_workspace.dbworkspace.workspace_id}"
  zone_name           = azurerm_private_dns_zone.databricks_zone.name
  resource_group_name = azurerm_resource_group.rg.name
  ttl                 = 300
  records             = [azurerm_private_endpoint.databricks_control_plane.private_service_connection[0].private_ip_address]
}

resource "azurerm_private_endpoint" "databricks_compute_plane" {
  name                = "${var.prefix}-compute-plane-pe"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  subnet_id           = var.private_endpoint_subnet_id
  private_service_connection {
    name                           = "${var.prefix}-compute-plane-psc"
    private_connection_resource_id = azurerm_databricks_workspace.dbworkspace.id
    subresource_names              = ["databricks_ui_api"]
    is_manual_connection           = false
  }
}

resource "azurerm_private_dns_a_record" "databricks_compute_a_record" {
  name                = "adb-compute-${azurerm_databricks_workspace.dbworkspace.workspace_id}"
  zone_name           = azurerm_private_dns_zone.databricks_zone.name
  resource_group_name = azurerm_resource_group.rg.name
  ttl                 = 300
  records             = [azurerm_private_endpoint.databricks_compute_plane.private_service_connection[0].private_ip_address]
}

```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/databricks/variables.tf
```
variable "location" {
  description = "The Azure location where all resources in this example should be created"
  type        = string
  default     = "koreacentral"
}

variable "environment" {
  description = "Environment is DEV(development) or PRD(production) environment information."
  type        = string
  validation {
    condition     = length(var.environment) <= 3
    error_message = "Err: Environment cannot be longer than three characters."
  }
  default = "DEV"
}

variable "prefix" {
  description = "A prefix used to name the resources."
  type        = string
  default     = "KDP"
}

variable "rg_name" {
  description = "The resource group name suffix."
  type        = string
  default     = "DATABRICKS"
}

variable "sku" {
  description = "The prefix used for all resources in this example"
  type        = string
  validation {
    condition     = can(regex("standard|premium|trial", var.sku))
    error_message = "Err: Valid options are ‘standard’, ‘premium’ or ‘trial’."
  }
}

variable "vnet_id" {
  description = "Virtual network id from network module."
  type        = string
}

variable "public_subnet_name" {
  description = "Public subnet name from network module."
  type        = string
}

variable "private_subnet_name" {
  description = "Private subnet name from network module."
  type        = string
}

variable "nsg_association1" {
  description = "The NSG ID associated with the public subnet"
  type        = string
}

variable "nsg_association2" {
  description = "The NSG ID associated with the private subnet"
  type        = string
}

variable "public_subnet_id" {
  description = "Public subnet id from network module."
  type        = string
}

variable "private_subnet_id" {
  description = "Private subnet id from network module."
  type        = string
}

variable "private_endpoint_subnet_id" {
  description = "Private endpoint subnet id from network module."
  type        = string
}
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/databricks/outputs.tf
```
# output "public_subnet_name" {
#   value = var.public_subnet_name
# }

output "private_subnet_name" {
  value = var.private_subnet_name
}

output "virtual_network_id" {
  value = var.vnet_id
}

output "dbworkspace_id" {
  value       = azurerm_databricks_workspace.dbworkspace.id
  description = "The ID of the Databricks workspace."
}

# output "databricks_token" {
#   value = databricks_token.token.token_value
# }```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/storage/adls_gen2/adls_gen2.tf
```
resource "azurerm_resource_group" "rg" {
  name     = "${var.prefix}-${var.environment}-${var.rg_name}"
  location = var.location
}

resource "azurerm_storage_account" "sa" {
  name                = "${lower(var.prefix)}${lower(var.environment)}sa"

  resource_group_name      = azurerm_resource_group.rg.name
  location                 = azurerm_resource_group.rg.location
  account_kind             = "StorageV2"
  account_tier             = "Standard"
  account_replication_type = "LRS"
  is_hns_enabled           = true
  tags = {
    environment = var.environment
  }
}

resource "azurerm_storage_data_lake_gen2_filesystem" "bronze" {
  name               = "${lower(var.prefix)}-${lower(var.environment)}-bronze"
  storage_account_id = azurerm_storage_account.sa.id
  depends_on         = [azurerm_storage_account.sa]
}

resource "azurerm_storage_data_lake_gen2_filesystem" "silver" {
  name               = "${lower(var.prefix)}-${lower(var.environment)}-silver"
  storage_account_id = azurerm_storage_account.sa.id
  depends_on         = [azurerm_storage_account.sa]
}

resource "azurerm_storage_data_lake_gen2_filesystem" "gold" {
  name               = "${lower(var.prefix)}-${lower(var.environment)}-gold"
  storage_account_id = azurerm_storage_account.sa.id
  depends_on         = [azurerm_storage_account.sa]
}

resource "azurerm_role_assignment" "databricks_sa_access" {
  principal_id        = var.databricks_principal_id
  role_definition_name = "Storage Blob Data Contributor"
  scope               = azurerm_storage_account.sa.id
  timeouts {
    create = "30m"
    delete = "30m"
  }
}

resource "azurerm_private_endpoint" "adls_gen2_private_endpoint" {
  name                = "${var.prefix}-adls-gen2-pe"
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  subnet_id           = var.private_subnet_id

  private_service_connection {
    name                           = "${var.prefix}-adls-gen2-psc"
    private_connection_resource_id = azurerm_storage_account.sa.id
    subresource_names              = ["blob"]
    is_manual_connection           = false
  }
}

resource "azurerm_private_dns_zone" "blob_private_dns" {
  name                = "privatelink.blob.core.windows.net"
  resource_group_name = azurerm_resource_group.rg.name
}

resource "azurerm_private_dns_zone_virtual_network_link" "blob_dns_link" {
  name                  = "${var.prefix}-blob-dns-link"
  resource_group_name   = azurerm_resource_group.rg.name
  private_dns_zone_name = azurerm_private_dns_zone.blob_private_dns.name
  virtual_network_id    = var.vnet_id
}

resource "azurerm_private_dns_a_record" "adls_gen2_a_record" {
  name                = azurerm_storage_account.sa.name
  zone_name           = azurerm_private_dns_zone.blob_private_dns.name
  resource_group_name = azurerm_resource_group.rg.name
  ttl                 = 300
  records             = [azurerm_private_endpoint.adls_gen2_private_endpoint.private_service_connection[0].private_ip_address]
}
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/storage/adls_gen2/variables.tf
```
variable "prefix" {
  description = "A prefix used to name the resources."
  type        = string
}

variable "environment" {
  description = "The deployment environment (e.g., DEV, STG, PRD)."
  type        = string
  default     = "DEV"
}

variable "rg_name" {
  description = "The resource group name suffix."
  type        = string
  default     = "STORAGE"
}

variable "location" {
  description = "The Azure region where resources will be created."
  type        = string
}

# variable "storage_account_name" {
#   type        = string
#   description = "The name of the storage account to create."
# }

# variable "filesystem_name" {
#   type        = string
#   description = "The name of the filesystem to create in the storage account."
# }

variable "tags" {
  type        = map(string)
  description = "A mapping of tags to assign to the resource."
  default     = {}
}

variable "databricks_principal_id" {
  description = "databricks_principal_id"
  type        = string
}

variable "private_subnet_id" {
  description = "The private subnet id."
  type        = string
}

variable "vnet_id" {
  description = "The virtual network id."
  type        = string
}
```

# /Users/mhjung/GitHub/terraform-azure/jmh-azure/modules/storage/adls_gen2/outputs.tf
```
output "resource_group_name" {
  value       = azurerm_resource_group.rg.name
  description = "The name of the resource group created for the data lake."
}

output "storage_account_name" {
  value       = azurerm_storage_account.sa.name
  description = "The name of the storage account used for the data lake."
}

output "storage_account_id" {
  value       = azurerm_storage_account.sa.id
  description = "The ID of the storage account used for the data lake."
}

output "bronze_filesystem_id" {
  value       = azurerm_storage_data_lake_gen2_filesystem.bronze.id
  description = "The resource ID of the Bronze data lake filesystem."
}

output "silver_filesystem_id" {
  value       = azurerm_storage_data_lake_gen2_filesystem.silver.id
  description = "The resource ID of the Silver data lake filesystem."
}

output "gold_filesystem_id" {
  value       = azurerm_storage_data_lake_gen2_filesystem.gold.id
  description = "The resource ID of the Gold data lake filesystem."
}

output "bronze_filesystem_name" {
  value       = azurerm_storage_data_lake_gen2_filesystem.bronze.name
  description = "The name of the Bronze data lake filesystem."
}

output "silver_filesystem_name" {
  value       = azurerm_storage_data_lake_gen2_filesystem.silver.name
  description = "The name of the Silver data lake filesystem."
}

output "gold_filesystem_name" {
  value       = azurerm_storage_data_lake_gen2_filesystem.gold.name
  description = "The name of the Gold data lake filesystem."
}
```

